let ballColorsArray = [];
let ballSlidersArray = [];

const initBallColors = [{
    h: 100,
    s: 35,
    l: 100,
    a: 0.5
  },
  {
    h: 200,
    s: 35,
    l: 100,
    a: 0.5
  },
  {
    h: 300,
    s: 35,
    l: 100,
    a: 0.5
  },
]

let colArray = [];


function addArraySliders() {

  class ColorSliderArray {

    constructor(name, startColor, quantity) {

      //this.objSelector = createSelect();
      //console.log(this.objSelector.elt);
      //Create DIV
      let cDiv = document.createElement('div');
      this.name = createP(name);

      let objSelector = document.createElement("Select");
      objSelector.classList.add('objSel');

      //Creates all of the OPTION elements and appends them to the select element.
      if (quantity > 1) {
        let allOption = document.createElement("option");
        allOption.textContent = "All";
        objSelector.appendChild(allOption);

        for (let i = 0; i < quantity; i++) {
          let opt = document.createElement("Option");
          opt.textContent = i + 1;
          objSelector.appendChild(opt);

        }
      }

      this.objSelector = objSelector

      cDiv.appendChild(this.name.elt);
      cDiv.classList.add('sliderDiv');

      cDiv.appendChild(this.objSelector);

      //oohhhhhhhhhhh this particular thing is not getting appended to the dom?


      //Create an array of DIVS here, on for each item in the array. 
      let colorSliderDivs = [];
      let colArray = [];
      this.p5Sliders = [];

      for (let i = 0; i < quantity; i++) {
        let hslaObject = {

          h: createSlider(0, 360, initBallColors[i].h, 1),
          s: createSlider(0, 100, initBallColors[i].s, 1),
          l: createSlider(0, 100, initBallColors[i].l, 1),
          a: createSlider(0, 1, initBallColors[i].a, 0.01),
        }

        //console.log("hsla slider object: ", colorSliders.h);


        // let hue = createSlider(0, 360, initBallColors[i].h, 1);
        // let saturation = createSlider(0, 100, initBallColors[i].s, 1);
        // let lightness = createSlider(0, 100, initBallColors[i].l, 1);
        // let alpha = createSlider(0, 1, initBallColors[i].a, 0.01);

        let colorSliderDiv = document.createElement('div');
        //console.log("colorSliderDiv", colorSliderDiv);


        colArray.push(hslaObject);
        //console.log("colArray[0] value", colArray[0].h.value());
        //console.log("colArray[0] elt", colArray[0].h.elt);





        colorSliderDiv.appendChild(hslaObject.h.elt);
        colorSliderDiv.appendChild(hslaObject.s.elt);
        colorSliderDiv.appendChild(hslaObject.l.elt);
        colorSliderDiv.appendChild(hslaObject.a.elt);

        colorSliderDivs.push(colorSliderDiv); //This isn't defined anywhere.???

        //ballColorsArray needs to be initialized in here.

        let initBallColor = color(
          hslaObject.h.value(),
          hslaObject.s.value(),
          hslaObject.l.value(),
          hslaObject.a.value()
        )

        //console.log("color ", i, " ", initBallColor);
        ballColorsArray.push(initBallColor);

        console.log(ballColorsArray);

        //I definitely need to figure out how this works in terms of applying to all the other
        //objects and what happens when an objects is added.


        // document.body.appendChild(cDiv); //Create a specific div in the html to append this to?
      }



      //colorSliderDivs is not equal to anything yet.
      this.colorSliderDivs = colorSliderDivs;
      console.log("this.colorSliderDivs", this.colorSliderDivs);
      this.colArray = colArray;

      // console.log("this.colorSliderDivs", this.colorSliderDivs);
      // console.log("this.colorSliderDivs", this.colArray);


      cDiv.appendChild(colorSliderDivs[0]);
      this.last = 0;
      this.cDiv = cDiv;

      let sliderContainer2 = document.getElementById('sliderContainer2');
      sliderContainer2.appendChild(this.cDiv);
      //this.colorDivs = colorDivs;     
      //The colorDivs are appended here and then read in the readSliderArray method.
      //append the div with the current option number.

      //Move this into a separate method.
      //return the div so that I can control when/where it is displayed in a separate function?  (Probably...?)
    }

    readSlider(index) {

      let hslaObject = this.colArray[index];

      let newC = color(
        hslaObject.h.value(),
        hslaObject.s.value(),
        hslaObject.l.value(),
        hslaObject.a.value());

      return newC;
      //console.log("newC", newC);
    }

    updateSelection() {
      let selection = this.objSelector.value;

      for (let i = 0; i < qty; i++) {
        this.cDiv.appendChild(this.colorSliderDivs[i]);
        this.colorSliderDivs[i].style.display = "none";
      }

      this.colorSliderDivs[0].style.display = "";

      if (this.objSelector.value === "All") {
        //append slider 0);
        //this.cDiv.appendChild(this.colorSliderDivs[0]);
        //this.cDiv.style.display = "block";
        this.colorSliderDivs[0].style.display = "";
        //
        //console.log(this.colorSliderDivs[0].hslaObject.h.value())
        //Make a for loop here.
        let sliderDivChildren = this.colorSliderDivs[0].children;


        sliderDivChildren[0].value = this.colArray[0].h.value();
        sliderDivChildren[1].value = this.colArray[0].s.value();
        sliderDivChildren[2].value = this.colArray[0].l.value();
        sliderDivChildren[3].value = this.colArray[0].a.value();




        console.log("this.colArray[0].h.value()", this.colArray[0].h.value());
        console.log("this.colorSliderDivs[0]: ", this.colorSliderDivs); //[0].value);
        console.log(sliderDivChildren[0].value);
        console.log(this.colorSliderDivs[0].children);
        //this.colorSliderDivs[0].value = this.colorSliderDivs[0].hslaObject.h.value();

      } else {
        //this.cDiv.appendChild(this.colorSliderDivs[selection - 1])
        //this.cDiv.style.display = "block";   

        console.log(ballColorsArray[selection - 1]);

        let sliderDivChildren = this.colorSliderDivs[0].children;
        sliderDivChildren[0].value = this.colArray[selection - 1].h.value();
        sliderDivChildren[1].value = this.colArray[selection - 1].s.value();
        sliderDivChildren[2].value = this.colArray[selection - 1].l.value();
        sliderDivChildren[3].value = this.colArray[selection - 1].a.value();

        this.colorSliderDivs[selection - 1].style.display = ""

        for (let i = 0; i < qty; i++) {
          if (i !== selection - 1) {
            this.colorSliderDivs[i].style.display = "none";
            //I need to also do this in the first half of the if-then, above.
          }
        }
      }


    }

    readSliderArray() {

      //Just read and return the one color..

      let selection = this.objSelector.value;

      //this.cDiv.removeChild(this.cDiv.lastChild);

      //let sliderChild = this.cDiv.lastChild;
      //sliderChild.style.display = "none";

      //The behavior which changes the sliders needs to be separated from reading the sliders.


      if (selection === "All") {
        let bColor = this.readSlider(0);
        //console.log("bColor in readSliderArray ", bColor);
        return {
          c: bColor,
          index: 0
        }
        //console.log(colorArray[0]);
      } else {
        //Read all the sliders (It doesn't (?) matter which one is showing?)
        //for i = 0 to colorArray.length
        let bColor = this.readSlider(selection - 1);
        let number = selection - 1;
        return {
          c: bColor,
          index: number
        }
        // for (let i = 0; i < colorArray.length; i++) {
        //   colorArray[number] = ballSlider[i].readSlider(); //...should be ballSlider[i].readSlider;
      }
    }

    createDimmed() {
      const dimAmt = 15;
      let newSaturation = this.saturation.value();

      let newC = color(this.hue.value(),
        newSaturation - dimAmt,
        this.lightness.value(),
        this.alpha.value());

      return newC;
    }
  } //End of Class ColorSlider.

  // The class slider does not need to be in this function (maybe be imported.)
  // addSliders can take a big color object to start and then the constructor calls below can be passed
  // the individuals color properties.



  ballSlidersArray = new ColorSliderArray('Ball Colors', initBallColors, qty);

} //End of addSliderArrays.


function updateOptionsValues() {
  ballSlidersArray.updateSelection();

}

function readSliderArrays() {
  //console.log('Called readSliderArrays()')
  //These variables are the ones which are accessed when .display() is called.
  //Create Sliders as initialized from an array and updated on individual balls.

  //Call updateSelection.
  //console.log("ballSlidersarray.objSelector", ballSlidersArray[0].objSelector);

  ballSlidersArray.updateSelection();
  let updateBallColor = ballSlidersArray.readSliderArray();
  ballColorsArray[updateBallColor.index] = updateBallColor.c;
}

//Change all of the names so that it doesn't conflict with addSliders.